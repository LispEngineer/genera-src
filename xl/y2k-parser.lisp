;;; -*- Mode: LISP; Syntax: Zetalisp; Package: FILE-SYSTEM; Base: 8 -*-

;;; Enhancements to FILE-SYSTEM to allow for Y2K issues for network
;;; functionality.
;;; Douglas P. Fields, Jr. - symbolics@lisp.engineer - May, 2021

;;; Note that Reader Macros starting with #/ were replaced with #\
;;; due to Zmacs Evaluate Buffer giving errors on the #/ macros
;;; before I figured out to set the syntax to Zetalisp.
;;; Document Examiner document on "#/ or #\ Reader Macro" says that
;;; #/ is for Zetalisp. I am not sure what Mode: LISP without Syntax sets the mode to,
;;; but clearly this was not the same lisp as when this file was originally
;;; compiled. >rel-8-3>sys>io>open.lisp
;;; It is probably Zetalisp, since ARRAY-ACTIVE-LENGTH is in Zetalisp.
;;; You need to use Syntax: Zetalisp in the mode line above.

;;; To make this code active in Zmacs:
;;; Then, m-X Set Package <RETURN> FILE-SYSTEM.
;;; Then, m-X Evaluate Buffer <RETURN>.
;;; It will ask if you want to redefine the function from SYS:IO;OPEN,
;;; to which you will say yes.
;;; (You can also do m-X Set Lisp Syntax <RETURN> Zetalisp.)

;;; If you do not do the Set Package, it will not work! You would have to tell
;;; it to use the ZL version of ARRAY-ACTIVE-LENGTH and the various
;;; FS package items for PARSE-DIRECTORY-DATE-PROPERTY-1 and
;;; *USE-FULL-PARSER* as various continuations from conditions.

;;; To test:
;;; Show Directory XENON:>DFields>*.*.newest (from COBALT)
;;; Unpatched system will report an error on any dates newer than 2000
;;; such as: "DATE-LAST-EXPUNGED 01/26/108 06:50:19"
;;; or "REFERENCE-DATE 05/05/121 12:48:57"
;;; Patched system will just plain work.

;;; Parses a date/time in the format MM/DD/YYY HH:MM:SS
;;; where the time part is optional, and the YYY is interpreted as years
;;; after 1900. This format is output by naive non-y2k date output
;;; used in filesystem I/O over the network.
;;; Douglas P. Fields, Jr. May 5, 2021 symbolics@lisp.engineer
(DEFUN PARSE-DIRECTORY-DATE-YYY-PROPERTY (STRING START &OPTIONAL END &AUX FLAG)
  ;(PRINT "Debug: Doug 2")
  (OR END (SETQ END (ZL:ARRAY-ACTIVE-LENGTH STRING)))
  (BLOCK PARSE-DIRECTORY-DATE-PROPERTY
    (BLOCK GIVE-UP
      (UNLESS (AND (OR (= END (+ START 9))
		       (SETQ FLAG (= END (+ START 18.))))
		   (CHAR= (AREF STRING (+ START 2)) #\/)
		   (CHAR= (AREF STRING (+ START 5)) #\/)
		   (OR (NULL FLAG)
		       (AND (CHAR= (AREF STRING (+ START 9))   #\SP)
			    (CHAR= (AREF STRING (+ START 12.)) #\:)
			    (CHAR= (AREF STRING (+ START 15.)) #\:))))
	(RETURN-FROM GIVE-UP))
      (LET (DAY MONTH YEAR HOURS MINUTES SECONDS)
	(SETQ MONTH (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING START)
	      DAY   (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 3))
	      YEAR  (PARSE-DIRECTORY-DATE-PROPERTY-2 STRING (+ START 6)))
	(UNLESS (AND ( 1 MONTH 12.)
		     ( 1 DAY (TIME:MONTH-LENGTH MONTH YEAR)))
	  (RETURN-FROM GIVE-UP))
	(IF (NOT FLAG)
	    (SETQ HOURS 0 MINUTES 0 SECONDS 0)
	    (SETQ HOURS   (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 10.))
		  MINUTES (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 13.))
		  SECONDS (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 16.)))
	    (UNLESS (AND ( 0 HOURS 23.) ( 0 MINUTES 59.) ( 0 SECONDS 59.))
	      (RETURN-FROM GIVE-UP)))
	(RETURN-FROM PARSE-DIRECTORY-DATE-PROPERTY
	  ;; This returns the same thing if YEAR is 2021 or 121, but
	  ;; will return a different result for just 21.
	  (TIME:ENCODE-UNIVERSAL-TIME SECONDS MINUTES HOURS DAY MONTH YEAR))))
    (UNLESS *USE-FULL-PARSER*
      (FSIGNAL "The FILE server violated protocol: ~S is not in the right date-time format
even allowing for 3-digit years. To try using the full time parser,
set FS:*USE-FULL-PARSER* to T and try again. (DPF)" (SUBSTRING STRING START END)))
    ;; Not in standard simple format.
    (CONDITION-CASE ()
	(TIME:PARSE-UNIVERSAL-TIME STRING START END)
      (TIME:PARSE-ERROR NIL))))

;;; Parses a 3-digit string number
(DEFUN PARSE-DIRECTORY-DATE-PROPERTY-2 (STRING START)
  (+ (* (- (CHAR-CODE (AREF STRING      START))  (CHAR-CODE #\0)) 100.)
     (* (- (CHAR-CODE (AREF STRING (1+  START))) (CHAR-CODE #\0)) 10.)
        (- (CHAR-CODE (AREF STRING (+ 2 START))) (CHAR-CODE #\0))))



;;; Fast date parser for simple case of MM/DD/YY HH:MM:SS .
;;; OVERRIDES >rel-8-3>sys>io>open.lisp version of the function.
;;; Extended also to handle MM/DD/YYY HH:MM:SS where YYY is 100+ for Y2K
;;;   compatibility of dates like 05/05/121 generated by "bad" servers.
;;; Douglas P. Fields, Jr., May 5, 2021, symbolics@lisp.engineer
(DEFUN PARSE-DIRECTORY-DATE-PROPERTY (STRING START &OPTIONAL END &AUX FLAG)
  (OR END (SETQ END (ARRAY-ACTIVE-LENGTH STRING)))
  (BLOCK PARSE-DIRECTORY-DATE-PROPERTY
    ;; Check if we have a possible YYY year.
    (WHEN (OR (= END (+ START 9))
	      (= END (+ START 18.)))
      (RETURN-FROM PARSE-DIRECTORY-DATE-PROPERTY
	(PARSE-DIRECTORY-DATE-YYY-PROPERTY STRING START END)))
    (BLOCK GIVE-UP
      (UNLESS (AND (OR (= END (+ START 8))
		       (SETQ FLAG (= END (+ START 17.))))
		   (CHAR= (AREF STRING (+ START 2)) #\/)
		   (CHAR= (AREF STRING (+ START 5)) #\/)
		   (OR (NULL FLAG)
		       (AND (CHAR= (AREF STRING (+ START 8)) #\SP)
			    (CHAR= (AREF STRING (+ START 11.)) #\:)
			    (CHAR= (AREF STRING (+ START 14.)) #\:))))
	(RETURN-FROM GIVE-UP))
      (LET (DAY MONTH YEAR HOURS MINUTES SECONDS)
	(SETQ MONTH (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING START)
	      DAY (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 3))
	      YEAR (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 6)))
	(UNLESS (AND ( 1 MONTH 12.)
		     ( 1 DAY (TIME:MONTH-LENGTH MONTH YEAR)))
	  (RETURN-FROM GIVE-UP))
	(IF (NOT FLAG)
	    (SETQ HOURS 0 MINUTES 0 SECONDS 0)
	    (SETQ HOURS (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 9))
		  MINUTES (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 12.))
		  SECONDS (PARSE-DIRECTORY-DATE-PROPERTY-1 STRING (+ START 15.)))
	    (UNLESS (AND ( 0 HOURS 23.) ( 0 MINUTES 59.) ( 0 SECONDS 59.))
	      (RETURN-FROM GIVE-UP)))
	(RETURN-FROM PARSE-DIRECTORY-DATE-PROPERTY
	  (TIME:ENCODE-UNIVERSAL-TIME SECONDS MINUTES HOURS DAY MONTH YEAR))))
    (UNLESS *USE-FULL-PARSER*
      (FSIGNAL "The FILE server violated protocol: ~S is not in the right date-time format.
Please report this bug.  To try using the full time parser, set FS:*USE-FULL-PARSER* to T
and try again." (SUBSTRING STRING START END)))
    ;; Not in standard simple format.
    (CONDITION-CASE ()
	(TIME:PARSE-UNIVERSAL-TIME STRING START END)
      (TIME:PARSE-ERROR NIL))))